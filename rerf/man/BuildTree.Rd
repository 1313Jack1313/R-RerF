% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BuildTree.R
\name{BuildTree}
\alias{BuildTree}
\title{RerF Tree Generator}
\usage{
BuildTree(X, Y, MinParent, MaxDepth, bagging, replacement, stratify, Cindex,
  classCt, FUN, options, COOB, CNS, Progress, rotate)
}
\arguments{
\item{X}{an n sample by d feature matrix (preferable) or data frame}

\item{Y}{an n length vector of class labels.  Class labels must be numeric and be within the range 1 to the number of classes.}

\item{MinParent}{the minimum splittable node size.  A node size < MinParent will be a leaf node. (MinParent = 6)}

\item{MaxDepth}{the longest allowable distance from the root of a tree to a leaf node (i.e. the maximum allowed height for a tree).  If MaxDepth=0, the tree will be allowed to grow without bound.  (MaxDepth=0)}

\item{bagging}{a non-zero value means a random sample of X will be used during tree creation.  If replacement = FALSE the bagging value determines the percentage of samples to leave out-of-bag.  If replacement = TRUE the non-zero bagging value is ignored. (bagging=.2)}

\item{replacement}{if true then n samples are chosen, with replacement, from X. (replacement=TRUE)}

\item{stratify}{if true then class sample proportions are maintained during the random sampling.  Ignored if replacement = FALSE. (stratify = FALSE).}

\item{Cindex}{a vector of lists.  Each list holds the indexes of its respective class (e.g. list 1 contains the index of each class 1 sample).}

\item{classCt}{a cumulative sum of class counts.}

\item{FUN}{a function that creates the random projection matrix. (FUN=makeA)}

\item{options}{a list of parameters to be used by FUN. (options=c(ncol(X), round(ncol(X)^.5),1L, 1/ncol(X)))}

\item{COOB}{if true the samples omitted during the creation of a tree are stored as part of the tree.  This is required to run the OOB function. (COOB=FALSE)}

\item{CNS}{????? (CNS=FALSE)}

\item{Progress}{if true a pipe is printed after each tree is created.  This is useful for large datasets. (Progress=FALSE)}

\item{rotate}{????? (rotate=FALSE)}
}
\value{
Tree
}
\description{
Creates a single decision tree based on an input matrix and class vector.  This is the function used by rerf to generate trees.
}
\author{
James and Tyler, jbrowne6@jhu.edu and
}
